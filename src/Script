

1>SELECT * from Employees
  order by salary desc
  Limit 5;


2>Select * from Employees
  order by salary asc
  Limit 10,5;

3>Select d.department_name, sum(e.salary) as totalSalary from Employees e
  join Departments d
  on e.department_id= d.department_id
  group by department_name
  having sum(salary)>3000;


4>Select * from Employees
  where not salary =7000;

Or 4>Select first_name, salary,
  CASE
  when  salary>7000 then 'above 7000'
  else 'below 7000'
  end as salaryStructor
  from Employees;


5>Select * from Projects
  where start_date>=
  date_sub(curdate(),interval 6 MONTH);


7>UPDATE employees
  set salary=salary+((salary*12)/100)
  where department_id=(select department_id from Departments where department_name='Finance');

8>Select first_name,last_name from employees
  where last_name like 'S%';


9>Select  d.department_name,count(e.employee_id) as totalEmployee from employees  e
   join Departments  d
   on e.department_id= d.department_id
   group by department_name;


10>Select P.project_name,sum(E.hours_worked) as total_hour from EmployeeProjects E
   join Projects P
   on E.project_id=P.project_id
   group by E.project_id;


11>select * from employees
   where salary >(select avg(salary) from employees);

12> select date_format(start_date,'%M %d %Y') as StartDate
    from Projects;

13> Select concat(e.first_name,'',e.last_name)as fullName,d.department_name,p.project_name from Employees e
    join Departments d on e.department_id=d.department_id
    join EmployeeProjects s on e.employee_id=s.employee_id
    join Projects p on s.project_id=p.project_id;


15> Select avg(E.salary), D.department_name, count(D.department_id) from Departments D
    join Employees E on E.department_id=D.department_id
    group by D.department_name
    Having count(D.department_id)>1;

16> select concat(first_name,' ',last_name) as fullName
    from Employees;

17>Update Employees
   set salary='8500'
   where salary>8000 and department_id=(select department_id from Departments where department_name='IT');

18> select max(salary) from Employees
    where department_id=(Select department_id from Departments where department_name='HR');



    Create TEMPORARY TABLE employees_projects_temp
    AS SELECT min(id),project_id, employee_id
        FROM employees_projects
        GROUP BY project_id, employee_id
        HAVING COUNT(*) > 1;


        Delete from employees_projects;


        Insert into employees_projects (id,project_id,employee_id)
        Select id,project_id,employee_id from employees_projects_temp;




        Delete from order
        Where id not in(
          Select min(id) from order
          group by cust_id , order_date
        );

        //Employees working on more than 1 project
        Select concat(e.first_name, ' ',e.last_name) as emp_name
        from employees e join employees_projects ep
        on e.id=ep.employee_id
        where ep.employee_id in(
          Select employee_id from employees_projects
          group by employee_id
          having COUNT(*)>1
        );


//you want to compare the average salary between departments.

Select d1.name as department1,
 d2.name as department2 ,
 ABS(AVG(e1.salary)-AVG(e2.salary)) as avg_salary_gap
 from employees e1 join employees e2
 on e1.department_id!=e2.department_id
 join departments d1
 on e1.department_id=d1.id
 join departments d2
 on e2.department_id=d2.id
 GROUP by d1.name,
 d2.name
 ;


//In Employees_Projects table some rows reference employees who no longer exist in the employees table.
 //Remove these orphaned rows


DELETE from employees
 where id not in(
  select e.id from employees e join
  employees_projects ep
  on e.id=ep.employee_id
 );



